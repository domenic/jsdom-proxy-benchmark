{
  "_args": [
    [
      {
        "raw": "promise-debounce@^1.0.1",
        "scope": null,
        "escapedName": "promise-debounce",
        "name": "promise-debounce",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Domenic\\Dropbox\\GitHub\\jsdom-proxy-benchmark\\node_modules\\ecmarkup"
    ]
  ],
  "_from": "promise-debounce@>=1.0.1 <2.0.0",
  "_id": "promise-debounce@1.0.1",
  "_inCache": true,
  "_location": "/promise-debounce",
  "_nodeVersion": "0.10.35",
  "_npmUser": {
    "name": "jaz303",
    "email": "jason@onehackoranother.com"
  },
  "_npmVersion": "2.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "promise-debounce@^1.0.1",
    "scope": null,
    "escapedName": "promise-debounce",
    "name": "promise-debounce",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ecmarkup"
  ],
  "_resolved": "https://registry.npmjs.org/promise-debounce/-/promise-debounce-1.0.1.tgz",
  "_shasum": "6ed76f8f79d0144fdbd01cc15589ce57f9d71e78",
  "_shrinkwrap": null,
  "_spec": "promise-debounce@^1.0.1",
  "_where": "C:\\Users\\Domenic\\Dropbox\\GitHub\\jsdom-proxy-benchmark\\node_modules\\ecmarkup",
  "author": {
    "name": "Jason Frame",
    "email": "jason@onehackoranother.com",
    "url": "http://jasonframe.co.uk"
  },
  "bugs": {
    "url": "https://github.com/jaz303/promise-debounce/issues"
  },
  "dependencies": {},
  "description": "Debounce any promise-returning function so that at any instant only one call is pending ",
  "devDependencies": {
    "es6-promise": "^1.0.0",
    "tape": "^2.14.0"
  },
  "directories": {},
  "dist": {
    "shasum": "6ed76f8f79d0144fdbd01cc15589ce57f9d71e78",
    "tarball": "https://registry.npmjs.org/promise-debounce/-/promise-debounce-1.0.1.tgz"
  },
  "gitHead": "ce0d214254a9bfa48a8e17696dd8ec7aef9f0d33",
  "homepage": "https://github.com/jaz303/promise-debounce",
  "keywords": [
    "promise",
    "debounce",
    "async"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jaz303",
      "email": "jason@onehackoranother.com"
    }
  ],
  "name": "promise-debounce",
  "optionalDependencies": {},
  "readme": "# promise-debounce\n\n## Installation\n\n### npm\n\nGet it:\n\n```shell\nnpm install promise-debounce\n```\n\nRequire it:\n\n```javascript\nvar debounce = require('promise-debounce');\n````\n\n## Example\n\n```javascript\nvar getStatus = debounce(ajax.bind(null, \"GET\", \"/status.json\"));\n\n// The three following calls will cause only a single AJAX request...\n\ngetStatus().then(function(status) {\n\t// ...\n});\t\n\ngetStatus().then(function(status) {\n\t// ...\n});\n\ngetStatus().then(function(status) {\n\t// ...\n});\n```\n\n## API\n\n#### `var debounced = debounce(fn, [ctx])`\n\nReturns a debounced version of `fn` with optional calling context `ctx`.\n\n`fn` must be a function which returns a promise.\n\nIf `debounced` is called and no other call is currently pending, `fn` will be called and its promise returned. Otherwise - if another call is pending - the original promise will be returned.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jaz303/promise-debounce.git"
  },
  "scripts": {
    "test": "node test/all.js"
  },
  "version": "1.0.1"
}
