/*!
 *  Copyright 2015 Ron Buckton (rbuckton@chronicles.org)
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
export declare const enum CharacterCodes {
    NullCharacter = 0,
    MaxAsciiCharacter = 127,
    LineFeed = 10,
    CarriageReturn = 13,
    LineSeparator = 8232,
    ParagraphSeparator = 8233,
    NextLine = 133,
    Space = 32,
    NonBreakingSpace = 160,
    EnQuad = 8192,
    EmQuad = 8193,
    EnSpace = 8194,
    EmSpace = 8195,
    ThreePerEmSpace = 8196,
    FourPerEmSpace = 8197,
    SixPerEmSpace = 8198,
    FigureSpace = 8199,
    PunctuationSpace = 8200,
    ThinSpace = 8201,
    HairSpace = 8202,
    ZeroWidthSpace = 8203,
    NarrowNoBreakSpace = 8239,
    IdeographicSpace = 12288,
    MathematicalSpace = 8287,
    Ogham = 5760,
    Underscore = 95,
    Number0 = 48,
    Number1 = 49,
    Number2 = 50,
    Number3 = 51,
    Number4 = 52,
    Number5 = 53,
    Number6 = 54,
    Number7 = 55,
    Number8 = 56,
    Number9 = 57,
    LowerA = 97,
    LowerB = 98,
    LowerC = 99,
    LowerD = 100,
    LowerE = 101,
    LowerF = 102,
    LowerG = 103,
    LowerH = 104,
    LowerI = 105,
    LowerJ = 106,
    LowerK = 107,
    LowerL = 108,
    LowerM = 109,
    LowerN = 110,
    LowerO = 111,
    LowerP = 112,
    LowerQ = 113,
    LowerR = 114,
    LowerS = 115,
    LowerT = 116,
    LowerU = 117,
    LowerV = 118,
    LowerW = 119,
    LowerX = 120,
    LowerY = 121,
    LowerZ = 122,
    UpperA = 65,
    UpperB = 66,
    UpperC = 67,
    UpperD = 68,
    UpperE = 69,
    UpperF = 70,
    UpperG = 71,
    UpperH = 72,
    UpperI = 73,
    UpperJ = 74,
    UpperK = 75,
    UpperL = 76,
    UpperM = 77,
    UpperN = 78,
    UpperO = 79,
    UpperP = 80,
    UpperQ = 81,
    UpperR = 82,
    UpperS = 83,
    UpperT = 84,
    UpperU = 85,
    UpperV = 86,
    UpperW = 87,
    UpperX = 88,
    UpperY = 89,
    UpperZ = 90,
    Asterisk = 42,
    At = 64,
    Backslash = 92,
    Backtick = 96,
    Bar = 124,
    CloseBrace = 125,
    CloseBracket = 93,
    CloseParen = 41,
    Colon = 58,
    Comma = 44,
    Dot = 46,
    DoubleQuote = 34,
    Equals = 61,
    Exclamation = 33,
    GreaterThan = 62,
    LessThan = 60,
    Minus = 45,
    OpenBrace = 123,
    OpenBracket = 91,
    OpenParen = 40,
    Plus = 43,
    Question = 63,
    SingleQuote = 39,
    Slash = 47,
    Tilde = 126,
    NumberSign = 35,
    Backspace = 8,
    FormFeed = 12,
    Tab = 9,
    VerticalTab = 11,
    NotEqualTo = 8800,
    ElementOf = 8712,
    NotAnElementOf = 8713,
    ByteOrderMark = 65279,
}
export declare enum SyntaxKind {
    Unknown = 0,
    EndOfFileToken = 1,
    LineTerminatorToken = 2,
    IndentToken = 3,
    DedentToken = 4,
    StringLiteral = 5,
    Terminal = 6,
    UnicodeCharacterLiteral = 7,
    Prose = 8,
    ProseHead = 9,
    ProseMiddle = 10,
    ProseTail = 11,
    ProseFull = 12,
    AtToken = 13,
    OpenBraceToken = 14,
    CloseBraceToken = 15,
    OpenBracketToken = 16,
    OpenBracketGreaterThanToken = 17,
    CloseBracketToken = 18,
    GreaterThanToken = 19,
    OpenParenToken = 20,
    CloseParenToken = 21,
    ColonToken = 22,
    ColonColonToken = 23,
    ColonColonColonToken = 24,
    CommaToken = 25,
    PlusToken = 26,
    TildeToken = 27,
    QuestionToken = 28,
    EqualsToken = 29,
    EqualsEqualsToken = 30,
    ExclamationEqualsToken = 31,
    LessThanExclamationToken = 32,
    LessThanMinusToken = 33,
    NotEqualToToken = 34,
    ElementOfToken = 35,
    NotAnElementOfToken = 36,
    Identifier = 37,
    ButKeyword = 38,
    DefineKeyword = 39,
    EmptyKeyword = 40,
    FalseKeyword = 41,
    GoalKeyword = 42,
    HereKeyword = 43,
    ImportKeyword = 44,
    LexicalKeyword = 45,
    LookaheadKeyword = 46,
    NoKeyword = 47,
    NotKeyword = 48,
    OfKeyword = 49,
    OneKeyword = 50,
    OrKeyword = 51,
    ThroughKeyword = 52,
    TrueKeyword = 53,
    Parameter = 54,
    ParameterList = 55,
    Argument = 56,
    ArgumentList = 57,
    LinkReference = 58,
    Import = 59,
    Define = 60,
    Production = 61,
    OneOfList = 62,
    RightHandSideList = 63,
    RightHandSide = 64,
    SymbolSpan = 65,
    ButNotSymbol = 66,
    UnicodeCharacterRange = 67,
    OneOfSymbol = 68,
    Nonterminal = 69,
    TerminalList = 70,
    SymbolSet = 71,
    EmptyAssertion = 72,
    LookaheadAssertion = 73,
    LexicalGoalAssertion = 74,
    NoSymbolHereAssertion = 75,
    ParameterValueAssertion = 76,
    ProseAssertion = 77,
    InvalidSymbol = 78,
    InvalidAssertion = 79,
    InvalidSourceElement = 80,
    SourceFile = 81,
    FirstProseFragment = 9,
    LastProseFragment = 11,
    FirstKeyword = 38,
    LastKeyword = 53,
    FirstPunctuation = 13,
    LastPunctuation = 33,
}
export declare type ProseFragmentLiteralKinds = SyntaxKind.ProseFull | SyntaxKind.ProseHead | SyntaxKind.ProseMiddle | SyntaxKind.ProseTail;
export declare type MetaKinds = SyntaxKind.Import | SyntaxKind.Define;
export declare function stringToToken(text: string): SyntaxKind;
export declare function tokenToString(kind: SyntaxKind, quoted?: boolean): string;
