"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
var path_1 = require("path");
var diagnostics_1 = require("../lib/diagnostics");
var parser_1 = require("../lib/parser");
var resources_1 = require("./resources");
var diff_1 = require("./diff");
var prex_1 = require("prex");
var chai_1 = require("chai");
describe("Parser", function () {
    defineTests();
    it("cancelable", function () {
        var cts = new prex_1.CancellationTokenSource();
        var parser = new parser_1.Parser(new diagnostics_1.DiagnosticMessages(), cts.token);
        cts.cancel();
        chai_1.assert.throws(function () { return parser.parseSourceFile("cancelable.grammar", ""); });
    });
    function defineTests() {
        for (var _i = 0, _a = resources_1.getGrammarFiles(); _i < _a.length; _i++) {
            var file = _a[_i];
            defineTest(path_1.basename(file), file);
        }
    }
    function defineTest(name, file) {
        it(name + " parse tree", function () {
            var text = fs_1.readFileSync(file, "utf8");
            var parser = new parser_1.Parser(new diagnostics_1.DiagnosticMessages());
            var sourceFile = parser.parseSourceFile(file, text);
            diff_1.compareBaseline(diff_1.writeNodes(name, sourceFile));
        });
    }
});
//# sourceMappingURL=parser-tests.js.map
