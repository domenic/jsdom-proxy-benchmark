"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = require("fs");
var path_1 = require("path");
var diagnostics_1 = require("../lib/diagnostics");
var nodes_1 = require("../lib/nodes");
var scanner_1 = require("../lib/scanner");
var resources_1 = require("./resources");
var diff_1 = require("./diff");
var prex_1 = require("prex");
var chai_1 = require("chai");
describe("Scanner", function () {
    defineTests();
    it("cancelable", function () {
        var sourceFile = new nodes_1.SourceFile("cancelable.grammar", "");
        var diagnostics = new diagnostics_1.DiagnosticMessages();
        diagnostics.setSourceFile(sourceFile);
        var cts = new prex_1.CancellationTokenSource();
        var scanner = new scanner_1.Scanner(sourceFile.filename, sourceFile.text, diagnostics, cts.token);
        cts.cancel();
        chai_1.assert.throws(function () { return scanner.scan(); });
    });
    function defineTests() {
        for (var _i = 0, _a = resources_1.getGrammarFiles(); _i < _a.length; _i++) {
            var file = _a[_i];
            defineTest(path_1.basename(file), file);
        }
    }
    function defineTest(name, file) {
        it(name + " tokens", function () {
            var text = fs_1.readFileSync(file, "utf8");
            var sourceFile = new nodes_1.SourceFile(file, text);
            var diagnostics = new diagnostics_1.DiagnosticMessages();
            diagnostics.setSourceFile(sourceFile);
            var scanner = new scanner_1.Scanner(file, text, diagnostics);
            diff_1.compareBaseline(diff_1.writeTokens(name, scanner, sourceFile.lineMap));
        });
    }
});
//# sourceMappingURL=scanner-tests.js.map
